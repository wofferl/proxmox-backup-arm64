name: Buildtest
run-name: Buildtest ${{ github.event.inputs.package }} ${{ github.event.inputs.version }} ${{ github.event.inputs.baseimage }} (${{ github.event.inputs.arch }})

on:
  workflow_dispatch:
    inputs:
      package:
        type: choice
        description: Package
        options:
        - server
        - client
      version:
        type: choice
        description: Version
        options:
        - 4.x
      arch:
        type: choice
        description: Arch
        options:
        - arm64
        - amd64
      baseimage:
        type: choice
        description: Base Image
        options:
        - debian:trixie-slim
        - debian:bookworm-slim
        - ubuntu:jammy

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Free up disk space
      run: |
        sudo rm -rf /usr/local/.ghcup
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /usr/local/lib/node_modules
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/share/swift
        df -h

    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build packages
      run: |
        [ "${{ github.event.inputs.package }}" = "client" ] && package="client"
        if [ "${{ github.event.inputs.arch }}" = "arm64" ]; then
          if [ "${RUNNER_DEBUG}" = "1" ]; then
            docker buildx build -o packages --build-arg buildoptions="cross github debug ${package}" --build-arg baseimage=${{ github.event.inputs.baseimage }} --platform linux/amd64 -f .github/Dockerfile.crosscompile-arm64 .
          else
            docker buildx build -o packages --build-arg buildoptions="cross github ${package}" --build-arg baseimage=${{ github.event.inputs.baseimage }} --platform linux/amd64 -f .github/Dockerfile.crosscompile-arm64 .
          fi
        else
          if [ "${RUNNER_DEBUG}" = "1" ]; then
            docker buildx build -o packages --build-arg buildoptions="github debug ${package}" --build-arg baseimage=${{ github.event.inputs.baseimage }} --platform linux/amd64 .
          else
            docker buildx build -o packages --build-arg buildoptions="github ${package}" --build-arg baseimage=${{ github.event.inputs.baseimage }} --platform linux/amd64 .
          fi
        fi
        echo "DEB_VERSION=$(dpkg --info packages/proxmox-backup-server_*.deb | sed -n '/Version/ s/[^:]\+: //p')" >> $GITHUB_ENV
        echo "DEB_VERSION_UPSTREAM=$(dpkg --info packages/proxmox-backup-server_*.deb | sed -n '/Version/ s/[^:]\+: \([0-9.]\+\)-[0-9]/\1/p')" >> $GITHUB_ENV
    - name: Test packages
      run: |
        df -h
        docker buildx build --build-arg baseimage=${{ github.event.inputs.baseimage }} --platform linux/${{ github.event.inputs.arch }} -f .github/Dockerfile.installtest .
