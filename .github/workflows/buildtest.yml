name: Buildtest
run-name: Buildtest ${{ github.event.inputs.package }} ${{ github.event.inputs.version }} ${{ github.event.inputs.baseimage }} (${{ github.event.inputs.arch }})

on:
  workflow_dispatch:
    inputs:
      package:
        type: choice
        description: Package
        options:
        - server
        - client
      version:
        type: choice
        description: Version
        options:
        - 4.x
      arch:
        type: choice
        description: Target Arch
        options:
        - arm64-native
        - arm64-cross
        - amd64
        - all
      baseimage:
        type: choice
        description: Base Image
        options:
        - debian:trixie-slim
        - debian:bookworm-slim
        - ubuntu:noble
        - ubuntu:jammy

jobs:
  build-arm64-native:
    if: ${{ github.event.inputs.arch == 'arm64-native' || github.event.inputs.arch == 'all' }}
    runs-on: ubuntu-24.04-arm

    steps:
    - name: Free up disk space
      run: |
        sudo rm -rf /usr/local/.ghcup
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /usr/local/lib/node_modules
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/share/swift

    - name: Checkout
      uses: actions/checkout@v5

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build packages
      run: |
        options=""
        [ "${{ github.event.inputs.package }}" = "client" ] && options="client"
        [ "${RUNNER_DEBUG}" = "1" ] && options=$options" debug"
        docker buildx build -o packages --build-arg buildoptions="github ${options}" --build-arg baseimage=${{ github.event.inputs.baseimage }} --platform linux/arm64 .
        echo "DEB_VERSION=$(dpkg --info packages/proxmox-backup-server_*.deb | sed -n '/Version/ s/[^:]\+: //p')" >> $GITHUB_ENV
        echo "DEB_VERSION_UPSTREAM=$(dpkg --info packages/proxmox-backup-server_*.deb | sed -n '/Version/ s/[^:]\+: \([0-9.]\+\)-[0-9]/\1/p')" >> $GITHUB_ENV
    - name: Test packages
      run: |
        docker buildx build --build-arg baseimage=${{ github.event.inputs.baseimage }} --platform linux/arm64 -f .github/Dockerfile.installtest .

  build-arm64-cross:
    if: ${{ github.event.inputs.arch == 'arm64-cross' || github.event.inputs.arch == 'all' }}
    runs-on: ubuntu-24.04

    steps:
    - name: Free up disk space
      run: |
        sudo rm -rf /usr/local/.ghcup
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /usr/local/lib/node_modules
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/share/swift

    - name: Checkout
      uses: actions/checkout@v5

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build packages
      run: |
        options=""
        [ "${{ github.event.inputs.package }}" = "client" ] && options="client"
        [ "${RUNNER_DEBUG}" = "1" ] && options=$options" debug"
        docker buildx build -o packages --build-arg buildoptions="cross github ${options}" --build-arg baseimage=${{ github.event.inputs.baseimage }} --platform linux/amd64 -f .github/Dockerfile.crosscompile-arm64 .
        echo "DEB_VERSION=$(dpkg --info packages/proxmox-backup-server_*.deb | sed -n '/Version/ s/[^:]\+: //p')" >> $GITHUB_ENV
        echo "DEB_VERSION_UPSTREAM=$(dpkg --info packages/proxmox-backup-server_*.deb | sed -n '/Version/ s/[^:]\+: \([0-9.]\+\)-[0-9]/\1/p')" >> $GITHUB_ENV
    - name: Test packages
      run: |
        docker buildx build --build-arg baseimage=${{ github.event.inputs.baseimage }} --platform linux/arm64 -f .github/Dockerfile.installtest .

  build-amd64:
    if: ${{ github.event.inputs.arch == 'amd64' || github.event.inputs.arch == 'all' }}
    runs-on: ubuntu-24.04

    steps:
    - name: Free up disk space
      run: |
        sudo rm -rf /usr/local/.ghcup
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /usr/local/lib/node_modules
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/share/swift

    - name: Checkout
      uses: actions/checkout@v5

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build packages
      run: |
        options=""
        [ "${{ github.event.inputs.package }}" = "client" ] && options="client"
        [ "${RUNNER_DEBUG}" = "1" ] && options=$options" debug"
        docker buildx build -o packages --build-arg buildoptions="github ${options}" --build-arg baseimage=${{ github.event.inputs.baseimage }} --platform linux/amd64 .
        echo "DEB_VERSION=$(dpkg --info packages/proxmox-backup-server_*.deb | sed -n '/Version/ s/[^:]\+: //p')" >> $GITHUB_ENV
        echo "DEB_VERSION_UPSTREAM=$(dpkg --info packages/proxmox-backup-server_*.deb | sed -n '/Version/ s/[^:]\+: \([0-9.]\+\)-[0-9]/\1/p')" >> $GITHUB_ENV
    - name: Test packages
      run: |
        docker buildx build --build-arg baseimage=${{ github.event.inputs.baseimage }} --platform linux/amd64 -f .github/Dockerfile.installtest .
